commit-msg:
    commands:
        # Проверка сообщения коммита через @commitlint/config-conventional
        lint-msg:
            run: npx --no -- commitlint --config .commitlint.mjs --edit "$1"

pre-commit:
    parallel: true
    commands:
        # Форматирование файлов с помощью Prettier
        format:
            glob: "*.{js,ts,jsx,tsx,json,css,scss,md,yml,yaml}"
            run: npx prettier --write {staged_files} > /dev/null
            stage_fixed: true

        # Линтинг с ESLint с автофиксом
        lint:
            glob: "*.{js,ts,jsx,tsx}"
            run: |
                npx eslint --fix {staged_files} --quiet
                git add {staged_files}

        # Проверка типов с TypeScript
        typecheck:
            run: npx turbo run typecheck --filter="...[HEAD]"

        # Запуск тестов на изменённых файлах с помощью Vitest
        test:
            run: npx vitest run --changed

pre-push:
    parallel: false
    commands:
        # Полный запуск тестов
        test:
            run: npx turbo run test --filter="...[origin/main]"

        # Полная проверка типов
        typecheck:
            run: npx turbo run typecheck --filter="...[origin/main]"

        # Проверка уязвимостей через npm audit
        audit:
            run: npm audit --audit-level=moderate

        # Проверка на неиспользуемые зависимости
        check-deps:
            run: npm run deps:check
            # todo: временно отключил
            skip: true
